{"version":3,"file":"chrome-debugger.js","sourceRoot":"","sources":["../../src/plugin/chrome-debugger.ts"],"names":[],"mappings":"AAAA,WAAW,CAAA;;;;;;;;;AAGX,OAAO,EAAE,uBAAuB,EAAE,MAAO,gFAAgF,CAAA;AAGzH,MAAM;IAGE,OAAO,CAAE,SAAiB;;YAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,uBAAuB,CAAC,SAAS,CAAC,CAAA;YACtD,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAA;YAC/D,MAAM,OAAO,CAAC,MAAM,EAAE,CAAA;YACtB,MAAM,QAAQ,CAAC,MAAM,EAAE,CAAA;YACvB,MAAM,QAAQ,CAAC,oBAAoB,CAAC;gBAClC,MAAM,EAAE,IAAI;aACb,CAAC,CAAA;YACF,MAAM,IAAI,CAAC,QAAQ,CAAC;gBAClB,GAAG,EAAE,uBAAuB;aAC7B,CAAC,CAAA;QAIJ,CAAC;KAAA;IACK,UAAU;;YACd,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAA;gBAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAA;YACtB,CAAC;QACH,CAAC;KAAA;IACD,QAAQ;IAER,CAAC;CACF","sourcesContent":["'use babel'\n\nimport { EventEmitter }  from 'events'\nimport { ChromeDebuggingProtocol }  from '/Users/willyelm/Github/chrome-debugging-protocol/lib/chrome-debugging-protocol'\nimport { dirname } from 'path'\n\nexport class ChromeDebugger {\n  private protocol: ChromeDebuggingProtocol\n  // constructor () {}\n  async connect (socketUrl: string) {\n    this.protocol = new ChromeDebuggingProtocol(socketUrl)\n    var { Console, Debugger, Page } = await this.protocol.connect()\n    await Console.enable()\n    await Debugger.enable()\n    await Debugger.setBreakpointsActive({\n      active: true\n    })\n    await Page.navigate({\n      url: 'http://127.0.0.1:8080'\n    })\n    // Debugger.scriptParsed((params) => {\n    //   console.log('script parsed', params)\n    // })\n  }\n  async disconnect () {\n    if (this.protocol) {\n      this.protocol.disconnect()\n      this.protocol = null\n    }\n  }\n  getPages () {\n\n  }\n}\n"]}
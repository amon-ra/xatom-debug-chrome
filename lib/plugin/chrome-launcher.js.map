{"version":3,"file":"chrome-launcher.js","sourceRoot":"","sources":["../../src/plugin/chrome-launcher.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,iEAAsF;AACtF,yBAA+B;AAU/B;IAAoC,kCAA+B;IAAnE;;IA0CA,CAAC;IArCC,6CAAoB,GAApB;QACE,MAAM,CAAC;YACL,gCAA8B,IAAI,CAAC,QAAU;YAC7C,6BAA2B,IAAI,CAAC,UAAY;YAE5C,4BAA4B;YAC5B,sBAAsB;YACtB,sDAAsD;YACtD,wBAAwB;YACxB,4DAA4D;YAC5D,IAAI,CAAC,GAAG;SACT,CAAA;IACH,CAAC;IACD,sCAAa,GAAb;QACE,IAAI,MAAM,GAAG,wBAAwB,CAAA;QACrC,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC1B,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAA;QAChC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,CAAC,SAAI,EAAE,CAAC,CAAC,CAAC;gBACf,KAAK,QAAQ;oBACX,MAAM,GAAG,kEAAkE,CAAA;oBAC3E,KAAK,CAAA;gBACP,KAAK,OAAO;oBACV,MAAM,GAAG,wBAAwB,CAAA;oBACjC,KAAK,CAAA;gBACP,KAAK,YAAY;oBACf,IAAI,MAAM,GAAG,SAAI,EAAE,CAAA;oBACnB,EAAE,CAAC,CAAC,MAAM,KAAK,KAAK,CAAC,CAAC,CAAC;wBACrB,MAAM,GAAG,oEAAoE,CAAA;oBAC/E,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,MAAM,GAAG,6DAA6D,CAAA;oBACxE,CAAC;oBACD,KAAK,CAAA;YACT,CAAC;QACH,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;IAC3B,CAAC;IACH,qBAAC;AAAD,CAAC,AA1CD,CAAoC,0CAA+B,GA0ClE;AA1CY,wCAAc","sourcesContent":["import { ChromeDebuggingProtocolLauncher } from 'xatom-debug-chrome-base/lib/launcher'\nimport { type, arch } from 'os'\n\nexport interface Page {\n  type: string,\n  url: string,\n  webSocketDebuggerUrl?: string\n}\n\nexport type Pages = Array<Page>\n\nexport class ChromeLauncher extends ChromeDebuggingProtocolLauncher {\n  public hostName: string\n  public portNumber: number\n  public customBinaryPath: string\n  public url: string\n  getLauncherArguments () {\n    return [\n      `--remote-debugging-address=${this.hostName}`,\n      `--remote-debugging-port=${this.portNumber}`,\n      // '--no-first-run',\n      '--no-default-browser-check',\n      '--disable-extensions',\n      '--disable-component-extensions-with-background-pages',\n      '--num-raster-threads=4',\n      '--user-data-dir=$(mktemp -d -t \\'chrome-remote_data_dir\\')',\n      this.url\n    ]\n  }\n  getBinaryPath (): string {\n    let binary = '/usr/bin/google-chrome'\n    if (this.customBinaryPath) {\n      binary = this.customBinaryPath\n    } else {\n      switch (type()) {\n        case 'Darwin':\n          binary = '/Applications/Google\\\\ Chrome.app/Contents/MacOS/Google\\\\ Chrome'\n          break\n        case 'Linux':\n          binary = '/usr/bin/google-chrome'\n          break\n        case 'Windows_NT':\n          let osArch = arch()\n          if (osArch === 'x86') {\n            binary = 'C:\\\\Program\\ Files\\ (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe'\n          } else {\n            binary = 'C:\\\\Program\\ Files\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe'\n          }\n          break\n      }\n    }\n    return this.quote(binary)\n  }\n}\n"]}
{"version":3,"file":"chrome-plugin.js","sourceRoot":"","sources":["../../src/plugin/chrome-plugin.ts"],"names":[],"mappings":"AAAA,WAAW,CAAA;;;;;;;;;AAEX,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAA;AAClD,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAA;AAClD,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAA;AAEhD,MAAM;IAOJ;QALQ,aAAQ,GAAmB,IAAI,cAAc,EAAE,CAAA;QAC/C,aAAQ,GAAmB,IAAI,cAAc,EAAE,CAAA;QAChD,YAAO,GAAW,aAAa,CAAA;QAC/B,SAAI,GAAW,eAAe,CAAA;QAC9B,aAAQ,GAAW,0CAA0C,CAAA;QAGlE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAA;IACvD,CAAC;IACD,QAAQ,CAAE,MAAM;QACd,IAAI,CAAC,YAAY,GAAG,MAAM,CAAA;IAC5B,CAAC;IACK,MAAM;;YACV,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,CAAA;YAEjC,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,WAAW,CAAA;YACpC,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAA;YAC/B,IAAI,SAAS,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAA;YAC3C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;YAEhC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAA;QACzB,CAAC;KAAA;IACK,OAAO;;YACX,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAA;YAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAA;YACpB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAA;QAC1B,CAAC;KAAA;IACK,SAAS;;QAEf,CAAC;KAAA;IACK,QAAQ;;QAEd,CAAC;KAAA;IACK,gBAAgB,CAAE,QAAQ,EAAE,UAAU;;QAE5C,CAAC;KAAA;IACK,mBAAmB,CAAE,QAAQ,EAAE,UAAU;;QAE/C,CAAC;KAAA;IACK,WAAW;;QAEjB,CAAC;KAAA;IACK,WAAW;;QAEjB,CAAC;KAAA;IACK,UAAU;;QAEhB,CAAC;KAAA;IACK,oBAAoB,CAAE,OAAO,EAAE,YAAY;;QAEjD,CAAC;KAAA;IACK,qBAAqB,CAAE,UAAkB,EAAE,cAAc;;QAE/D,CAAC;KAAA;CACF","sourcesContent":["'use babel'\n\nimport { ChromeLauncher } from './chrome-launcher'\nimport { ChromeDebugger } from './chrome-debugger'\nimport { ChromeOptions } from './chrome-options'\n\nexport class ChromePlugin {\n  private pluginClient: any\n  private launcher: ChromeLauncher = new ChromeLauncher()\n  private debugger: ChromeDebugger = new ChromeDebugger()\n  public options: Object = ChromeOptions\n  public name: String = 'Google Chrome'\n  public iconPath: String = 'atom://atom-bugs-chrome/icons/chrome.svg'\n  constructor () {\n    // launcher listeners\n    this.launcher.didStop(() => this.pluginClient.stop())\n  }\n  register (client) {\n    this.pluginClient = client\n  }\n  async didRun () {\n    this.pluginClient.console.clear()\n    // run chrome\n    this.launcher.hostName = 'localhost'\n    this.launcher.portNumber = 9222\n    let socketUrl = await this.launcher.start()\n    this.debugger.connect(socketUrl)\n    // set client as run\n    this.pluginClient.run()\n  }\n  async didStop () {\n    this.debugger.disconnect()\n    this.launcher.stop()\n    this.pluginClient.stop()\n  }\n  async didResume () {\n\n  }\n  async didPause () {\n\n  }\n  async didAddBreakpoint (filePath, lineNumber) {\n\n  }\n  async didRemoveBreakpoint (filePath, lineNumber) {\n\n  }\n  async didStepOver () {\n\n  }\n  async didStepInto () {\n\n  }\n  async didStepOut () {\n\n  }\n  async didRequestProperties (request, propertyView) {\n\n  }\n  async didEvaluateExpression (expression: string, evaluationView) {\n\n  }\n}\n"]}